@use '../abstracts/palettes' as *;
@use '../abstracts' as *;

.grid-player1 {
	grid-area: player1;
}

.grid-player2 {
	grid-area: player2;
}

.grid-player3 {
	grid-area: player3;
}

.grid-player4 {
	grid-area: player4;
}

/* grid for player 1 */

@mixin player-grid($p) {
	display: grid;
	grid-template-rows: repeat(3, 1fr);
	grid-template-areas: '#{$p}-flowers'
	'#{$p}-melds'
	'#{$p}-tiles';
}

@mixin grid-p($p, $align) {
	grid-area: $p;
	display: flex;
	flex-flow: wrap;
	align-content: flex-start;
	justify-content: $align;
}

.player1-grid {
	@include player-grid(p1);
	align-content: flex-start;
	height: 100%;
}

.grid-p1-flowers {
	@include grid-p(p1-flowers, flex-start);
}

.grid-p1-tiles {
	@include grid-p(p1-tiles, center);
}

.grid-p1-melds {
	@include grid-p(p1-melds, flex-end);
}

/* grid for player 2 */

.player2-grid {
	@include player-grid(p2);
	transform: rotate(90deg) translate(33.33%, 100%);
	width: 300%;
	height: 33.33%;
}

.grid-p2-flowers {
	@include grid-p(p2-flowers, flex-start);
}

.grid-p2-tiles {
	@include grid-p(p2-tiles, center);
}

.grid-p2-melds {
	@include grid-p(p2-melds, flex-end);
}

/* grid for player 3 */

.player3-grid {
	@include player-grid(p3);
	transform: rotate(180deg);
	height: 100%;
}

.grid-p3-flowers {
	@include grid-p(p3-flowers, flex-start);
}

.grid-p3-tiles {
	@include grid-p(p3-tiles, center);
}

.grid-p3-melds {
	@include grid-p(p3-melds, flex-end);
}

/* grid for player 4 */

.player4-grid {
	@include player-grid(p4);
	transform: rotate(270deg) translate(-33.33%, -100%);
	width: 300%;
	height: 33.33%;
}

.grid-p4-flowers {
	@include grid-p(p4-flowers, flex-start);
}

.grid-p4-tiles {
	@include grid-p(p4-tiles, center);
}

.grid-p4-melds {
	@include grid-p(p4-melds, flex-end);
}
